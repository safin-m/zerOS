[tasks.create_bin_dir]
condition = { platforms = ["linux", "mac"] }
script = ["mkdir -p bin"]

[tasks.create_build_dir]
condition = { platforms = ["linux", "mac"] }
script = ["mkdir -p build"]

[tasks.boot_assemble]
dependencies = ["create_bin_dir"]
command = "nasm"
args = ["-f", "bin", "./src/boot/boot.asm", "-o", "./bin/boot.bin"]

[tasks.kernel_assemble]
dependencies = ["create_build_dir"]
command = "nasm"
args = ["-f", "elf", "-g", "./src/kernel.asm", "-o", "./build/kernel.asm.o"]

[tasks.kernel_link]
dependencies = ["kernel_assemble"]
command = "i386-elf-ld"
args=["-g", "-r", "./build/kernel.asm.o", "-o", "./build/kernel.o"]

[tasks.start]
dependencies = ["clean_all", "os_assemble", "kernel_link"]

[tasks.os_assemble]
dependencies = ["boot_assemble"]
condition = { platforms = ["linux", "mac"] }
script = ["dd if=./bin/boot.bin >> ./bin/os.bin"]

[tasks.clean_all]
condition = { platforms = ["linux", "mac"] }
script = [
    "echo 'Cleaning build directory...'",
    "test -d ./build && rm -rf ./build || echo 'Build directory does not exist'",
    "echo 'Cleaning target directory...'",
    "test -d ./target && rm -rf ./target || echo 'Target directory does not exist'",
    "echo 'Cleaning bin directory...'",
    "test -d ./bin && rm -rf ./bin || echo 'Bin directory does not exist'"
]
